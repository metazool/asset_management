# Generated by Django 5.0.2 on 2025-04-10 18:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("assets", "0003_calibrationcertificate_corrective_actions_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="MeasurementType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "standard",
                    models.CharField(
                        blank=True,
                        help_text="Standard or protocol used (e.g., ISO, ASTM)",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="SensorType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "unit",
                    models.CharField(
                        help_text="Unit of measurement (e.g., Â°C, Pa, V)", max_length=20
                    ),
                ),
                (
                    "min_range",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Minimum measurement range",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "max_range",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Maximum measurement range",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "accuracy",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Accuracy as percentage",
                        max_digits=5,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name="instrument",
            name="resolution",
            field=models.DecimalField(
                blank=True,
                decimal_places=3,
                help_text="Resolution of the instrument",
                max_digits=10,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="site",
            name="contact_person",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="managed_sites",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="assigned_issues",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "instrument",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="assets.instrument",
                    ),
                ),
                (
                    "reported_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reported_issues",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="instrument",
            name="measurement_types",
            field=models.ManyToManyField(
                blank=True,
                help_text="Types of measurements the instrument can perform",
                related_name="instruments",
                to="assets.measurementtype",
            ),
        ),
        migrations.AddField(
            model_name="instrument",
            name="sensor_types",
            field=models.ManyToManyField(
                blank=True,
                help_text="Types of sensors installed in the instrument",
                related_name="instruments",
                to="assets.sensortype",
            ),
        ),
    ]
